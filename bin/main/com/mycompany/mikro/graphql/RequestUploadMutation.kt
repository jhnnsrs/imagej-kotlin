//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.mycompany.mikro.graphql

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.Mutation
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import com.mycompany.mikro.graphql.adapter.RequestUploadMutation_ResponseAdapter
import com.mycompany.mikro.graphql.adapter.RequestUploadMutation_VariablesAdapter
import com.mycompany.mikro.graphql.selections.RequestUploadMutationSelections
import com.mycompany.mikro.graphql.type.RequestUploadInput
import kotlin.Boolean
import kotlin.String
import com.mycompany.mikro.graphql.type.Mutation as CompiledMutation

public data class RequestUploadMutation(
  public val input: RequestUploadInput,
) : Mutation<RequestUploadMutation.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    RequestUploadMutation_VariablesAdapter.serializeVariables(writer, this, customScalarAdapters,
        withDefaultValues)
  }

  override fun adapter(): Adapter<Data> = RequestUploadMutation_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledMutation.type
  )
  .selections(selections = RequestUploadMutationSelections.__root)
  .build()

  @ApolloAdaptableWith(RequestUploadMutation_ResponseAdapter.Data::class)
  public data class Data(
    /**
     * Request credentials to upload a new image
     */
    public val requestUpload: RequestUpload,
  ) : Mutation.Data

  public data class RequestUpload(
    public val accessKey: String,
    public val status: String,
    public val secretKey: String,
    public val bucket: String,
    public val key: String,
    public val sessionToken: String,
    public val store: String,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "5e6517b9b58d9f43ec442fe5e526c541705b69cb8e849aba90d77eb2e92ecc5a"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * mutation RequestUpload($input: RequestUploadInput!) {
     *   requestUpload(input: $input) {
     *     accessKey
     *     status
     *     secretKey
     *     bucket
     *     key
     *     sessionToken
     *     store
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "mutation RequestUpload(${'$'}input: RequestUploadInput!) { requestUpload(input: ${'$'}input) { accessKey status secretKey bucket key sessionToken store } }"

    public const val OPERATION_NAME: String = "RequestUpload"
  }
}
