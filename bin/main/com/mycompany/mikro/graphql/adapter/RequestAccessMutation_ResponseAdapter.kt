//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.mycompany.mikro.graphql.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.obj
import com.mycompany.mikro.graphql.RequestAccessMutation
import kotlin.String
import kotlin.collections.List

public object RequestAccessMutation_ResponseAdapter {
  public object Data : Adapter<RequestAccessMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("requestAccess")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        RequestAccessMutation.Data {
      var _requestAccess: RequestAccessMutation.RequestAccess? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _requestAccess = RequestAccess.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return RequestAccessMutation.Data(
        requestAccess = _requestAccess ?: missingField(reader, "requestAccess")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: RequestAccessMutation.Data,
    ) {
      writer.name("requestAccess")
      RequestAccess.obj().toJson(writer, customScalarAdapters, value.requestAccess)
    }
  }

  public object RequestAccess : Adapter<RequestAccessMutation.RequestAccess> {
    public val RESPONSE_NAMES: List<String> = listOf("accessKey", "secretKey", "bucket", "key",
        "sessionToken", "path")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        RequestAccessMutation.RequestAccess {
      var _accessKey: String? = null
      var _secretKey: String? = null
      var _bucket: String? = null
      var _key: String? = null
      var _sessionToken: String? = null
      var _path: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _accessKey = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _secretKey = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _bucket = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _key = StringAdapter.fromJson(reader, customScalarAdapters)
          4 -> _sessionToken = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _path = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return RequestAccessMutation.RequestAccess(
        accessKey = _accessKey ?: missingField(reader, "accessKey"),
        secretKey = _secretKey ?: missingField(reader, "secretKey"),
        bucket = _bucket ?: missingField(reader, "bucket"),
        key = _key ?: missingField(reader, "key"),
        sessionToken = _sessionToken ?: missingField(reader, "sessionToken"),
        path = _path ?: missingField(reader, "path")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: RequestAccessMutation.RequestAccess,
    ) {
      writer.name("accessKey")
      StringAdapter.toJson(writer, customScalarAdapters, value.accessKey)

      writer.name("secretKey")
      StringAdapter.toJson(writer, customScalarAdapters, value.secretKey)

      writer.name("bucket")
      StringAdapter.toJson(writer, customScalarAdapters, value.bucket)

      writer.name("key")
      StringAdapter.toJson(writer, customScalarAdapters, value.key)

      writer.name("sessionToken")
      StringAdapter.toJson(writer, customScalarAdapters, value.sessionToken)

      writer.name("path")
      StringAdapter.toJson(writer, customScalarAdapters, value.path)
    }
  }
}
