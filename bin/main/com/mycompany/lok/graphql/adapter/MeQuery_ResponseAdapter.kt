//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0'.
//
package com.mycompany.lok.graphql.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.NullableStringAdapter
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.obj
import com.mycompany.lok.graphql.MeQuery
import kotlin.String
import kotlin.collections.List

public object MeQuery_ResponseAdapter {
  public object Data : Adapter<MeQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("me")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        MeQuery.Data {
      var _me: MeQuery.Me? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _me = Me.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return MeQuery.Data(
        me = _me ?: missingField(reader, "me")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: MeQuery.Data,
    ) {
      writer.name("me")
      Me.obj().toJson(writer, customScalarAdapters, value.me)
    }
  }

  public object Me : Adapter<MeQuery.Me> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "username", "email")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        MeQuery.Me {
      var _id: String? = null
      var _username: String? = null
      var _email: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _username = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _email = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return MeQuery.Me(
        id = _id ?: missingField(reader, "id"),
        username = _username ?: missingField(reader, "username"),
        email = _email
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: MeQuery.Me,
    ) {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("username")
      StringAdapter.toJson(writer, customScalarAdapters, value.username)

      writer.name("email")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.email)
    }
  }
}
